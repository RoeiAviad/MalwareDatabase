'use strict';
var path = require('path');
var express = require('express');
var db = require("./db.js");
const VirusTotalApi = require("virustotal-api");
const bodyParser = require("body-parser");
const fileUpload = require("express-fileupload");
const axios = require("axios");

const virusTotal = new VirusTotalApi("14d61c19d17c6ea7705c664b3839456accdf7b0b17629994ed84802a2a5c81dc");

var app = express();

var staticPath = path.join(__dirname, '/');
app.use(express.static(staticPath));
app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());
app.use(bodyParser.raw({type: '*/*', limit: '50mb'}));
app.use(fileUpload());

app.set('port', process.env.PORT || 3000);

// listen for search requests
app.get("/search", function (req, res) {
    var conn = db.connect();
    db.search(res, conn, req.query.q);
});

// listen for info requests
app.get("/info", function (req, res) {
    var conn = db.connect();
    db.infoByName(res, conn, req.query.name);
});

// listen for virus total analyze requests
app.post("/vt", function (req, res) {
    if ("url" in req.body) {        // if url scan
        virusTotal          // scan url in virustotal
            .urlScan(req.body.url)
            .then(response => {
                let resource = response.resource;

                virusTotal.urlReport(resource).then(result => {
                    res.send(result);
                });
            })
            .catch(err => console.log(`Scan failed. ${err}`));
    }
    else if ("hash" in req.body) {          // if hash scan
        axios({         // scan hash in metadefender
            method: "get",
            url: "https://api.metadefender.com/v4/hash/" + req.body.hash,
            headers: { apikey: "41be9f30fc923e024ae4b2c58416b88e" },
            })
            .then(function (response) {
                res.send(response.data);
            })
            .catch(function (error) {
                res.send(error.response.data.error);
            });
    }
});

// listen for file scan
app.post("/upload", function (req, res) {
	var type = req.headers["content-type"] ? req.headers["content-type"] : req.headers["Content-Type"];		// get correct header
	var headers = { "Content-Type": type, "Authorization": "Bearer _WNKlwsnybsfsWyBwMh1jQ" };					// set headers
	axios({
		method: "post",
		url: "http://127.0.0.1:8090/tasks/create/file",			// post to cuckoo api
		data: req.body,
		headers: headers
		})
		.then(function (response) {
				res.send(response.data);
		})
		.catch(function (error) {
				res.send({ task_id: 0 });				// send invalid result
		});
});

app.get("/report", function(req, res) {
	var timer = setInterval(function(task){					// check status every 10 seconds
		/*		check task status			*/
		axios({
			method: "get",
			url: "http://127.0.0.1:8090/tasks/view/" + task,
			headers: { "Authorization": "Bearer _WNKlwsnybsfsWyBwMh1jQ" }
			})
			.then(function (response) {
				if (response.data.task.status == "reported") {			// if task reported
					clearInterval(timer);				// stop checking status
					/*		get report		*/
					axios({
						method: "get",
						url: "http://127.0.0.1:8090/tasks/report/" + task,
						headers: { "Authorization": "Bearer _WNKlwsnybsfsWyBwMh1jQ" }
						})
						.then(function (response) {
							res.send(response.data);
						})
						.catch(function (error) {
							console.error(error);
						});
				}
			})
			.catch(function (error) {
				clearInterval(timer);				// stop checking status
			});
	}, 10000, req.query.task);
});

// create local server
var server = app.listen(app.get('port'), function () {
    console.log('listening on port 3000...');
});
